{"version":3,"sources":["cms-logo.png","components/Header/index.js","components/Footer/index.js","components/ScreenHeader/index.js","components/Dashboard/index.js","container/DashboardContainer.js","components/DownShift/index.js","components/DownShift2/index.js","components/RequestImage/index.js","container/RequestImageContainer.js","components/Table/index.js","components/CodeBox/index.js","components/RadioButtons/index.js","components/AvailableImages/index.js","container/AvailableImageContainer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","key","exact","to","activeClassName","Footer","href","target","rel","Icon","name","ScreenHeader","title","Dashboard","details","demo","src","logo","alt","DashboardContainer","connect","state","require","DownShiftContainer","downShift","buildImage","props","console","log","Autocomplete","onChange","event","value","selected","kind","selected_release","release","scram_arch_list","scram_archs","selected_scram_arch","scram_arch","dispatch","type","request_image","request_scram_arch","id","text","options","books","getOptionLabel","option","style","width","height","renderInput","params","TextField","label","margin","fullWidth","useStyles","makeStyles","theme","createStyles","root","marginTop","spacing","borderColor","classes","display","alignItems","justifyContent","inputRoot","RequestImage","releases","compatible_scram_archs","compatible_scram_arch","map","c","class","image","RequestImageContainer","Table","columns","data","useState","filterInput","setFilterInput","useTable","useFilters","useSortBy","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","setFilter","setAllFilters","e","undefined","placeholder","headerGroup","getHeaderGroupProps","headers","column","render","row","i","getRowProps","cells","cell","background","getCellProps","CodeBox","copied","setCopied","Popup","trigger","join","onCopy","timeout","setTimeout","clearTimeout","content","open","inverted","RadioButtonsContainer","table","selectedValue","setSelectedValue","handleChange","show","available","building","pending","Radio","checked","ThirdPage","badge_colours","useMemo","accessor","Cell","backgroundColor","AvailableImagesContainer","AvailableImages","App","path","component","AvailableImageContainer","Component","Boolean","window","location","hostname","match","initialReleases","initialTable","initialShow","initalBuildImageState","store","createStore","combineReducers","action","new_show","getState","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.e41d4176.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cms-logo.9ce63631.png\";","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './Header.css';\n\nconst Header = () => {\n  return (\n    <nav className=\"Header\">\n      <NavLink key=\"home\" className=\"Header-link left\" exact to=\"/\" activeClassName=\"active\">Home</NavLink>\n      <NavLink key=\"request-an-image\" className=\"Header-link right\" exact to=\"/request-an-image\" activeClassName=\"active\">Request an image</NavLink>\n      <NavLink key=\"available-images\" className=\"Header-link left\" exact to=\"/available-images\" activeClassName=\"active\">Available images</NavLink>\n    </nav>\n  );\n}\n\nexport default Header;","import React from \"react\";\nimport { Icon } from \"semantic-ui-react\";\nimport \"./Footer.css\";\n\nexport default function Footer() {\n  return (\n    <footer className=\"footer-bottom\">\n      <span>Copyright © 2020 Adelina - peace out</span>\n      <span className='links'>\n      <a href={'/'} target=\"_blank\" rel=\"noopener noreferrer\">\n          <Icon name=\"book\"></Icon> Docs\n        </a>\n        <a href={'/'} target=\"_blank\" rel=\"noopener noreferrer\">\n          <Icon name=\"discourse\"></Icon> Forum\n        </a>\n      <a\n          href={'/'}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <Icon name=\"conversation\"></Icon> Chat\n        </a>\n      </span>\n    </footer>\n  );\n}","import React from 'react';\nimport './ScreenHeader.css';\n\nconst ScreenHeader = ({title}) => {\n  return (\n    <header className=\"Screen-header\">\n      <h1 className=\"Screen-title\">{title}</h1>\n    </header>\n  );\n}\n\nexport default ScreenHeader;","import React from 'react';\nimport ScreenHeader from '../ScreenHeader';\nimport './Dashboard.css';\nimport logo from '../../cms-logo.png';\n\nconst Dashboard = ({details, demo}) => {\n  return (\n    <div className=\"Home\">\n      <div className=\"Background\"></div>\n      <div className=\"Home-text\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <h1 className=\"Screen-title\">Service for CMSSW Docker image building</h1>\n        <p>Build your CMS docker images!</p>\n      </div>\n    </div>\n  );\n}\n\nexport default Dashboard;","import { connect } from 'react-redux'\nimport Dashboard from '../components/Dashboard'\n\nconst mapStateToProps = (state) => {\n  return {\n    details: 0,\n    demo: state.demo\n  };\n};\n\nconst DashboardContainer = connect(\n  mapStateToProps,\n  null\n)(Dashboard)\n\nexport default DashboardContainer","import React from 'react'\nimport TextField from '@material-ui/core/TextField';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { connect } from 'react-redux';\nrequire('./DownShift.css');\n\n\nconst ComboBox = (props) => {\n\n  const onChange = (selected, kind) => {\n\n    const selected_release = selected == null ? \"\" : selected.release;\n    const scram_arch_list = selected == null \n      ? {\n          release: \"\",\n          scram_archs: []\n        } : selected;\n    const selected_scram_arch = selected == null ? \"\" : selected.scram_arch;\n\n    if ( kind === \"release\" )  {\n      props.dispatch({\n        type: 'REQUEST_IMAGE',\n        request_image: selected_release\n      })\n      props.dispatch({\n        type: 'CREATE_SCRAM_ARCH_LIST',\n        scram_arch_list: scram_arch_list\n      })\n    } else if ( kind === \"scram_arch\" ) {\n      props.dispatch({\n        type: 'REQUEST_SCRAM_ARCH',\n        request_scram_arch: selected_scram_arch\n      }) \n    }\n  };\n\n  console.log(\"books\" , props.buildImage);\n\n  return (\n      <div>\n      <Autocomplete \n        onChange={(event, value) => onChange(value, props.kind)}\n        id={props.text}\n        options={props.books}\n        getOptionLabel={(option) => option.release}\n        style={{ width: 400, height: 100}}\n        renderInput={(params) => <TextField \n            {...params} \n            label={props.text}\n            margin=\"normal\"\n            fullWidth />}\n        />\n        </div>\n    );\n  }\n\n  const mapStateToProps = (state) => {\n    return {\n      downShift: state.downShift,\n      buildImage: state.buildImage\n    }\n  }\n  \n  const DownShiftContainer = connect(\n    mapStateToProps,\n    null\n  )(ComboBox)\n  \n  export default DownShiftContainer\n  ","import React from 'react'\nimport TextField from '@material-ui/core/TextField';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { connect } from 'react-redux';\nimport './DownShift.css';\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    root: {\n        width: 500,\n        '& > * + *': {\n            marginTop: theme.spacing(2),\n        },\n        \"&:hover .MuiOutlinedInput-notchedOutline\": {\n            borderColor: \"red\"\n        },\n    },\n  }),\n);\n\nconst ComboBox2 = (props) => {\n\n  const onChange = (selected, kind) => {\n\n    const selected_release = selected == null ? \"\" : selected.release;\n    const scram_arch_list = selected == null \n      ? {\n          release: \"\",\n          scram_archs: []\n        } : selected;\n    const selected_scram_arch = selected == null ? \"\" : selected.scram_arch;\n\n    if ( kind === \"release\" )  {\n      props.dispatch({\n        type: 'REQUEST_IMAGE',\n        request_image: selected_release\n      })\n      props.dispatch({\n        type: 'CREATE_SCRAM_ARCH_LIST',\n        scram_arch_list: scram_arch_list\n      })\n    } else if ( kind === \"scram_arch\" ) {\n      props.dispatch({\n        type: 'REQUEST_SCRAM_ARCH',\n        request_scram_arch: selected_scram_arch\n      }) \n    }\n  };\n\n  const classes = useStyles();\n  console.log(\"books\" , props.buildImage);\n\n  return (\n      <div className={classes.root}>\n      <Autocomplete style={{\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        }}\n        onChange={(event, value) => onChange(value, props.kind)}\n        id={props.text}\n        options={props.books}\n        getOptionLabel={(option) => option.scram_arch}\n        style={{ width: 400, height: 100}}\n        renderInput={(params) => <TextField \n            {...params} \n            label={props.text}\n            margin=\"normal\"\n            className={classes.inputRoot}\n            fullWidth />}\n        />\n        </div>\n    );\n  }\n\n  const mapStateToProps = (state) => {\n    return {\n      downShift: state.downShift,\n      buildImage: state.buildImage\n    }\n  }\n  \n  const DownShiftContainer = connect(\n    mapStateToProps,\n    null\n  )(ComboBox2)\n  \n  export default DownShiftContainer\n  ","import React from 'react'\nimport ScreenHeader from '../ScreenHeader';\nimport './RequestImage.css';\nimport ComboBox from '../DownShift';\nimport ComboBox2 from '../DownShift2';\n\nconst RequestImage = (props) => {\n\n    const releases = props.releases.releases;\n    const compatible_scram_archs = props.buildImage.compatible_scram_arch.scram_archs.map( c => {\n        var info =  {\n            scram_arch: c\n        }\n        return info;\n    })\n\n    return (\n        \n        <div className=\"Home\">\n            <div className=\"Background\"></div>\n                <div className=\"Home-text\">\n                    <ScreenHeader id=\"home-header\" title=\"Request an image\"/>\n                </div>\n                \n                <div class=\"split left\">\n                    <div class=\"centered\">\n                        <div style={{\n                        alignItems: 'center',\n                        justifyContent: 'center',\n                        }}>\n                            <p className=\"Page-text\">1. Start by choosing a CMSSW release. You have chosen</p>\n                            <p className={props.buildImage.image === \"\" ? \"Chosen-text\" : \"UnChosen-text\"}>{props.buildImage.image === \"\" ? \"None\" : props.buildImage.image}</p>\n                            <p className=\"Page-text\">2. Choose the SCRAM ARCH version. You have chosen</p>\n                            <p className={props.buildImage.scram_arch === \"\" ? \"Chosen-text\" : \"UnChosen-text\"}>{props.buildImage.scram_arch === \"\" ? \"None\" : props.buildImage.scram_arch}</p>\n                            <p><button class=\"button\">Make a request</button></p>\n                        </div>\n                    </div>\n                </div>\n  \n\n                <div class=\"split right\">\n                    <div class=\"centered\">\n                        <div style={{\n                            alignItems: 'center',\n                            justifyContent: 'center',\n                            }}>\n                            <p><ComboBox books={releases} kind=\"release\" text=\"CMSSW releases\"/></p>\n                            <p> <ComboBox2 books={compatible_scram_archs} kind=\"scram_arch\" text=\"SCRAM ARCH versions\"/></p>\n                        </div>\n                    </div>\n                </div>\n        </div>\n    );\n}\n\nexport default RequestImage","import { connect } from 'react-redux'\nimport RequestImage from '../components/RequestImage'\n\nconst mapStateToProps = (state) => {\n  return {\n    releases: state.releases,\n    buildImage: state.buildImage\n  }\n}\n\nconst RequestImageContainer = connect(\n  mapStateToProps,\n  null\n)(RequestImage)\n\nexport default RequestImageContainer","import React, { useState } from \"react\";\nimport { useTable, useFilters, useSortBy } from \"react-table\";\nimport TableScrollbar from 'react-table-scrollbar';\nimport './Table.css';\n\nexport default function Table({ columns, data }) {\n  const [filterInput, setFilterInput] = useState(\"\");\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n    setFilter,\n    setAllFilters\n  } = useTable(\n    {\n      columns,\n      data\n    },\n    useFilters,\n    useSortBy\n  );\n\n  const handleFilterChange = e => {\n    const value = e.target.value || undefined;\n    setFilter(\"cmssw\", value);\n    setFilterInput(value);\n  };\n\n  return (\n    <>\n      <p>\n\n      <input className=\"search\"\n        value={filterInput}\n        onChange={handleFilterChange}\n        placeholder={\"Search CMSSW release..\"}\n      /> \n      </p>\n      <TableScrollbar height=\"550px\">\n      <table\n        {...getTableProps()}>\n        <thead>\n          {headerGroups.map(headerGroup => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map(column => (\n                <th>\n                  {column.render(\"Header\")}\n                </th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {rows.map((row, i) => {\n            prepareRow(row);\n            return (\n              <tr {...row.getRowProps()}>\n                {row.cells.map(cell => {\n                  console.log(\"Cell is\", cell.column.Header)\n                  return (\n                    <td style={{ background: cell.column.Header === \"Docker Pull\" ? \"#f5ecec\" : null }} {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\n                  );\n                })}\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n      </TableScrollbar>\n    </>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Icon, Popup } from \"semantic-ui-react\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport \"./CodeBox.css\";\n\nconst COPY_CHECK_TIMEOUT = 1500;\n\nconst CodeBox = ({text}) => {\n  const [copied, setCopied] = useState(false);\n\n  const handleCopied = () => {\n    setCopied(true);\n\n    const timeout = setTimeout(() => {\n      setCopied(false);\n      clearTimeout(timeout);\n    }, COPY_CHECK_TIMEOUT);\n  };\n\n  return (\n    <div className=\"container\">\n      <div\n        className=\"content\">\n      </div>\n      {text}\n        <Popup\n          trigger={\n            <CopyToClipboard\n              text={text.join(\"\")}\n              onCopy={handleCopied}\n            >\n              <Icon name=\"copy outline\" className=\"copy-icon\" />\n            </CopyToClipboard>\n          }\n          content=\"Copied!\"\n          open={copied}\n          inverted\n        />\n    </div>\n  );\n}\n\nexport default CodeBox;","import React, { useState } from \"react\";\nimport Radio from \"@material-ui/core/Radio\";\nimport { connect } from 'react-redux'\n\nconst RadioButtons = (props) => {\n    const [selectedValue, setSelectedValue] = useState(\"a\");\n\n    const handleChange = event => {\n        console.log(event.target.value);\n        setSelectedValue(event.target.value);\n\n        if ( event.target.value === \"a\" )  {\n            props.dispatch({\n              type: 'SHOW',\n              show: props.table.available\n            })\n          } else if ( event.target.value === \"b\" ) {\n            props.dispatch({\n              type: 'SHOW',\n              show: props.table.building\n            }) \n          } else if ( event.target.value === \"c\" ) {\n            props.dispatch({\n              type: 'SHOW',\n              show: props.table.pending\n            }) \n          }\n    };\n\n    return (\n      <div>\n        <Radio checked={selectedValue === \"a\"} onChange={handleChange} value=\"a\" name=\"images\" /> Available now\n        <Radio checked={selectedValue === \"b\"} onChange={handleChange} value=\"b\" name=\"images\" /> Currently building\n        <Radio checked={selectedValue === \"c\"} onChange={handleChange} value=\"c\" name=\"images\" /> Pending requests\n      </div>\n    );\n}\n\n\nconst mapStateToProps = (state) => {\n  return {\n    table: state.table\n  }\n}\n\nconst RadioButtonsContainer = connect(\n  mapStateToProps,\n  null\n)(RadioButtons)\n\nexport default RadioButtonsContainer","import React, { useMemo, useState, useEffect }  from 'react'\nimport './AvailableImages.css'\nimport Table from '../Table'\nimport '../Table/Table.css';\nimport CodeBox from '../CodeBox';\nimport RadioButtons from '../RadioButtons';\n\nconst ThirdPage = ({table, show}) => {\n\n    const badge_colours = {\n      \"done\": \"#9ae6b4\",\n      \"building\": \"#9abbe6\",\n      \"pending\": \"#f1afe1\"\n    }\n\n    const columns = useMemo(\n        () => [\n          {\n            Header: \"CMSSW\",\n            accessor: \"cmssw\"\n          },\n          {\n            Header: \"SCRAM ARCH\",\n            accessor: \"scram_arch\"\n          },\n         {\n            Header: \"Docker Pull\",\n            accessor: \"url\",\n            Cell: ({ cell: { value } }) => value === \"\" ? <CodeBox text={[\"-.-.-.-.-.-.-.-.-.-.-.-.-.-.- \", \"not yet available\", \" -.-.-.-.-.-.-.-.-.-.-.-.-.-.-\"]}/> : <CodeBox text={[\"docker pull \", value]}/>\n          },\n          {\n            Header: \"Status\",\n            accessor: \"status\",\n            Cell: ({ cell: { value } }) => <span className=\"badge\" style = {{ backgroundColor: badge_colours[value] }}>{value}</span>\n          },\n          {\n            Header: \"Created At\",\n            accessor: \"createdAt\"\n          }\n        ],\n      );\n\n    const data = show.show;\n\n    return (\n        <div className=\"Home\">\n            <div className=\"Background\"></div>\n            <div className=\"Home-text\">\n            <div className=\"Radio\"><RadioButtons/></div>\n            <Table columns={columns} data={data}/>\n            </div>\n        </div>\n    )\n}\n\nexport default ThirdPage","import { connect } from 'react-redux'\nimport AvailableImages from '../components/AvailableImages'\n\nconst mapStateToProps = (state) => {\n  return {\n    demo: state.demo,\n    table: state.table,\n    show: state.show\n  }\n}\n\nconst AvailableImagesContainer = connect(\n  mapStateToProps,\n  null\n)(AvailableImages)\n\nexport default AvailableImagesContainer","import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport DashboardContainer from './container/DashboardContainer'\nimport RequestImageContainer from './container/RequestImageContainer'\nimport AvailableImageContainer from './container/AvailableImageContainer'\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Header/>\n        <div className=\"Content\">\n          <Switch>\n            <Route exact path=\"/\" component={DashboardContainer}/>\n            <Route exact path=\"/request-an-image\" component={RequestImageContainer}/>\n            <Route exact path=\"/available-images\" component={AvailableImageContainer}/>\n          </Switch>\n        </div>\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router} from 'react-router-dom'\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { combineReducers } from 'redux'\nimport 'semantic-ui-css/semantic.min.css';\n\nimport releases from './data/releases.json';\nimport available from './data/available.json';\nimport building from './data/building.json';\nimport pending from './data/pending.json';\n\n /*\n  json of compatible CMSSW releases and SCRAM ARCH versions\n  {\n    \"release\": \"CMSSW_10_1_11\",\n    \"scram_archs\": [\n      \"slc6_amd64_gcc630\",\n      \"slc7_amd64_gcc630\",\n      \"slc7_amd64_gcc700\"\n    ]\n  },\n  {\n    ...\n  }\n  What to show in the downshift forms for \"Request an image\"\n */\n\nconst initialReleases = {\n  releases: releases\n}\n\nconst ReleasesReducer = (state = initialReleases, action) => {\n  switch (action.type) {\n    default:\n      return state;\n  }\n}\n\n/*\n  json of images available in the gitlab registry, images currently being built \n  and pending request for building an image.\n  {\n        \"name\": \"name1\",\n        \"cmssw\": \"CMSSW_5_3_13_cand1\",\n        \"scram_arch\": \"slc5_amd64_gcc462\",\n        \"status\": \"done\",\n        \"url\": \"gitlab-registry.cern.ch/alintulu/cmssw-docker-ci/cmssw:CMSSW_10_6_8_patch1-2020-02-19-df153472\",\n        \"createdAt\": \"2020-09-09\"\n    },\n    {\n      ...\n    }\n    What to show in the table of \"Available images\"\n*/\n\nconst initialTable = {\n  available: available,\n  building: building,\n  pending: pending\n}\n\nconst TableReducer = (state = initialTable, action) => {\n  switch(action.type){\n    default:\n      return state;\n  }\n}\n\n/*\n  What to show in the table of \"Availanle images\" when you toggle the radio buttons\n*/\n\nconst initialShow = {\n  show: available\n}\n\nconst ShowReducer = (state = initialShow, action) => {\n  const new_show = action.show;\n  switch(action.type){\n    case 'SHOW':\n      return {\n        show: new_show\n      }\n    default:\n      return state;\n  }\n}\n\n/*\n  What CMSSW release and SCRAM ARCH version is chosen on \"Request and image\".\n  SCRAM ARCH is set to zero when new CMSSW release is chosen.\n  Compatible scram archs are taken from releases.json when a CMSSW\n  release is chosen \n*/\n\nconst initalBuildImageState = {\n  image: \"\",\n  scram_arch: \"\",\n  compatible_scram_arch: {\n    release: \"\",\n    scram_archs: []\n  }\n};\n\nconst BuildImageReducer = (state = initalBuildImageState, action) => {\n  const request_image = action.request_image;\n  const request_scram_arch = action.request_scram_arch;\n  const scram_arch_list = action.scram_arch_list;\n  switch (action.type) {\n    case 'REQUEST_IMAGE':\n      return {\n        ...state,\n        image: request_image,\n        scram_arch: \"\"\n      }\n    case 'REQUEST_SCRAM_ARCH':\n      return {\n        ...state,\n        scram_arch: request_scram_arch\n      }\n    case 'CREATE_SCRAM_ARCH_LIST':\n      return {\n        ...state,\n        compatible_scram_arch: scram_arch_list\n      }\n    default:\n      return state;\n  }\n}\n\nconst store = createStore(\n  combineReducers({\n    releases: ReleasesReducer,\n    buildImage: BuildImageReducer,\n    table: TableReducer,\n    show: ShowReducer\n  })\n);\n\nconsole.log(\"Reducer is\", store.getState());\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}